[tool.poetry]
name = "entropylab"
version = "0.14.0"
description = ""
license = "BSD-3-Clause"
authors = [
    "Tal Shani <tal@quantum-machines.co>",
    "Guy Kerem <guy@quantum-machines.co>",
    "Gal Winer <gal@quantum-machines.co>",
    "Uri Goldstein <uri.goldstein@gmail.com>",
    "Nikola Šibalić  <nikola@quantum-machines.co>",
    "Satya Bade <satya@quantum-machines.co> ",
    "Ilan Mitnikov <ilan@quantum-machines.co>"
]
packages = [
    { include = "entropylab" }
]
include = [
    "CHANGELOG.md",
    "LICENSE",
]
exclude = [
    "**/tests/**",
    "**/conftest.py/**",
]
readme = "README.md"
homepage = "https://github.com/entropy-lab/entropy"

[tool.poetry.scripts]
entropy = 'entropylab.cli.main:main'
n3p = 'entropylab.cli.main:main'

[tool.poetry.dependencies]
python = ">=3.7.1,<3.10"
sqlalchemy = "^1.4.0"
bokeh = "^2.3.0"
param = "^1.10.1"
dill = "^0.3.3"
pandas = "^1.2.3"
numpy = "^1.19"
jsonpickle = "^2.0.0"
graphviz = "^0.16"
networkx = "^2.6.0"
matplotlib = "^3.4.1"
h5py = "^3.3.0"
alembic = "^1.6.5"
dynaconf = "^3.1.4"
dash = "^2.4.1"
dash-bootstrap-components = "^1.0.0"
waitress = "^2.1.2"
tinydb = "^4.5.2"
munch = "^2.5.0"
hupper = "^1.10.3"
qualang-tools = "^0.9.0"
hiredis = "^2.0.0"
redis = "^4.1.0"
Jinja2 = "^3.0.3"
psutil = "^5.9.0"
pyzmq = ">=22.3,<24.0"
msgpack = "^1.0.3"
pika = "^1.2.0"
psycopg2-binary = "^2.9.3"
pytz = ">=2021.3,<2023.0"
tzlocal = "^4.1"
tenacity = "^8.0.1"
asyncpg = "^0.25"
celery = "^5.2.3"
fastapi = ">=0.75,<0.78"
requests = "^2.27.1"
distro = "^1.7.0"
filelock = "^3.7.1"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
black = "^22.3.0"
flake8 = "^4.0.1"
flake8-bugbear = "^22.4.25"
pytest-repeat = "^0.9.1"
pytest-cov = "^3.0.0"
poethepoet = "^0.10.0"

[tool.pytest.ini_options]


[tool.poe.tasks.format]
cmd = "black entropylab"
help = "Format source files according to the style rules"

[tool.poe.tasks.check-format]
cmd = "black entropylab --check"
help = "Check that all files are formatted according to the style rules"

[tool.poe.tasks.lint]
cmd = "flake8 entropylab"
help = "Check for lint errors"

[tool.poe.tasks.test]
cmd = "pytest"
help = "Run all unit tests"

[tool.poe.tasks.check]
sequence = ["check-format", "lint", "test"]
help = "Perform all check possible on the code"

[tool.black]
target-version = ["py37"]
line-length = 88

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
